{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "cluster-hadoop",
    "annotations": {
      "description": "An example Hadoop application",
      "tags": "Hadoop",
      "iconClass": "icon-php"
    }
  },
  "labels": {
    "template": "cluster-hadoop-example"
  },
   "objects": [
		{
		  "kind": "Service",
		  "apiVersion": "v1",
		  "metadata": {
			"name": "cluster-hadoop-example",
			"annotations": {
			  "description": "Exposes and load balances the application pods"
			}
		  },
		  "spec": {
			"ports": [
			  {
				"name": "web",
				"port": 8080,
				"targetPort": 8080
			  }
			],
			"selector": {
			  "name": "cluster-hadoop-example"
			}
		  }
		},
		{
			"kind": "Route",
			"apiVersion": "v1",
			"id": "cluster-hadoop-http",
			"metadata": {
				"name": "$cluster-hadoop",
				"labels": {
					"application": "cluster-hadoop"
				},
				"annotations": {
					"description": "Route for application's http service."
				}
			},
			"spec": {
				"host": "${APPLICATION_DOMAIN}",
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"kind": "Pod",
			"apiVersion": "v1",
			"metadata": {
				"name": "cluster-hadoop",
				"labels": {
					"application": "cluster-hadoop"
				},
				"annotations": {
					"description": "Route for application's http service."
				}
			},
			"spec": {
				"containers": [
					{
						"image": "sequenceiq/hadoop-docker",
						"name": "master-hadoop",
						"ports": [
									{
									"containerPort": 8088,
									"protocol": "TCP"
									},
									{
									"containerPort": 22,
									"protocol": "TCP"
									}
					    ],
						 "env": [
                                    {
                                        "name": "HADOOP_USER",
                                        "value": "123"
                                    }
                                ],
                                "resources": {}
					}
				]
			}
		},
{
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/etc/bootstrap.sh -bash"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                   
                                ]
                            }
                        ]
                    }
                }
            }
        }		
	],
   "parameters": [
			{
				"name": "APPLICATION_NAME",
				"description": "The name for the application.",
				"value": "cluster-hadoop",
				"required": true
			},
			{
				"name": "APPLICATION_DOMAIN",
				"description": "Custom hostname for service routes.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
			}
		]
 
} 
